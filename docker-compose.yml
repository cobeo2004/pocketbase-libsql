services:
  sqld.primary:
    image: ghcr.io/tursodatabase/libsql-server:latest
    platform: linux/amd64
    ports:
      - "8080:8080"
      - "5001:5001"
    environment:
      - SQLD_NODE=primary
    volumes:
      - ./data/libsql/primary:/var/lib/sqld
    restart: unless-stopped
  sqld.replica1:
    image: ghcr.io/tursodatabase/libsql-server:latest
    depends_on:
      - sqld.primary
    platform: linux/amd64
    ports:
      - "8081:8080"
      - "5002:5001"
    environment:
      - SQLD_NODE=replica
      - SQLD_PRIMARY_URL=libsql://sqld.primary:5001
    volumes:
      - ./data/libsql/replica1:/var/lib/sqld
  sqld.replica2:
    image: ghcr.io/tursodatabase/libsql-server:latest
    depends_on:
      - sqld.primary
    platform: linux/amd64
    ports:
      - "8082:8080"
      - "5003:5001"
    environment:
      - SQLD_NODE=replica
      - SQLD_PRIMARY_URL=libsql://sqld.primary:5001
    volumes:
      - ./data/libsql/replica2:/var/lib/sqld
  s3.minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: s3.minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    networks:
      - minio_networks
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3
  pocketbase1:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DB_PATH: http://sqld.replica1:8080
        DB_AUTH_TOKEN: ${DB_AUTH_TOKEN:-}
    ports:
      - "8090:8080"
    depends_on:
      - sqld.replica1
    volumes:
      - ./pb_data_1:/app/pb_data
    restart: unless-stopped
  pocketbase2:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DB_PATH: http://sqld.replica2:8080
        DB_AUTH_TOKEN: ${DB_AUTH_TOKEN:-}
    ports:
      - "8091:8080"
    depends_on:
      - sqld.replica2
    volumes:
      - ./pb_data_2:/app/pb_data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "8089:80"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pocketbase1
      - pocketbase2
    restart: unless-stopped

networks:
  minio_networks:
    driver: bridge

volumes:
  minio_data:
    driver: local
